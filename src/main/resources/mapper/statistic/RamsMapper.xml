<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzmtr.eam.mapper.statistic.RamsMapper">
    <select id="query4AQYYZB" resultType="com.wzmtr.eam.dto.res.statistic.RamsCarResDTO">
        SELECT (SELECT count(1)
            FROM T_FAULT_INFO d
            left join T_FAULT_ORDER df on d.FAULT_NO = df.FAULT_NO
            WHERE d.MAJOR_CODE in('06','07')
                and df.order_Status != '99'
              and d.IF_RELIABILITY = '0'
                and d.FAULT_TYPE in ('10')
                 and  df.FAULT_AFFECT in ('01', '10', '11')
            )
            as "faultNum",
            (SELECT count(1)
            FROM T_FAULT_INFO d
            left join T_FAULT_ORDER df on d.FAULT_NO = df.FAULT_NO
            WHERE 1 = 1
                and d.MAJOR_CODE  in('06','07')
              and df.order_Status != '99'
              and d.IF_RELIABILITY = '0'
                and df.FAULT_AFFECT in ('03', '04', '05'))       as "affect11",
            (SELECT count(1)
            FROM T_FAULT_INFO d
            left join T_FAULT_ORDER df on d.FAULT_NO = df.FAULT_NO
            WHERE  d.MAJOR_CODE in('06','07')
              and d.IF_RELIABILITY = '0'
              and df.order_Status != '99'
                and df.FAULT_AFFECT in ('06', '07' ,'08' ,'09')) as "affect21",
                round((select sum(t.TOTAL_WORK_MILE)
                       from T_TRAIN_MILE t) / 10000, 2)   as "millionMiles"
        from dual
    </select>
    <select id="queryFautTypeByMonthBySys" resultType="com.wzmtr.eam.dto.res.statistic.SystemFaultsResDTO">
        SELECT
        c.YEAR_MONTH AS "yearMonth",
        (
        SELECT COUNT(1)
        FROM T_FAULT_INFO d, T_FAULT_ORDER df
        WHERE d.FAULT_NO = df.FAULT_NO
        AND SUBSTR(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
        AND d.MAJOR_CODE in ('07','06')
        AND df.ORDER_STATUS != '99'
        AND SUBSTR(d.FAULT_MODULE_ID, 0, 3) IN
        <foreach item="moduleId" collection="moduleIds" open="(" close=")" separator=",">
            #{moduleId}
        </foreach>
        AND d.FAULT_TYPE = '10'
        ) AS "zx",
        (
        SELECT COUNT(1)
        FROM T_FAULT_INFO d, T_FAULT_ORDER df
        WHERE d.FAULT_NO = df.FAULT_NO
        AND SUBSTR(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
        AND d.MAJOR_CODE in ('07','06')
        AND df.ORDER_STATUS != '99'
        AND SUBSTR(d.FAULT_MODULE_ID, 0, 3) IN
        <foreach item="moduleId" collection="moduleIds" open="(" close=")" separator=",">
            #{moduleId}
        </foreach>
        AND d.FAULT_TYPE = '20'
        ) AS "crk",
        (
        SELECT COUNT(1)
        FROM T_FAULT_INFO d, T_FAULT_ORDER df
        WHERE d.FAULT_NO = df.FAULT_NO
        AND SUBSTR(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
        AND d.MAJOR_CODE in ('07','06')
        AND df.ORDER_STATUS != '99'
        AND SUBSTR(d.FAULT_MODULE_ID, 0, 3) IN
        <foreach item="moduleId" collection="moduleIds" open="(" close=")" separator=",">
            #{moduleId}
        </foreach>
        AND d.FAULT_TYPE = '30'
        ) AS "yf",
        (
        select sum(t.TOTAL_MILE)
        from T_TRAIN_MILE t
        where substr(t.DAY, 1, 7) = c.YEAR_MONTH
        ) AS "miles"
        FROM T_FAULT_INFO t,
        (
        SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{startDate}, 'YYYY-MM'), ROWNUM - 1), 'YYYY-MM') AS YEAR_MONTH
        FROM DUAL
        CONNECT BY ROWNUM <![CDATA[<=]]> MONTHS_BETWEEN(TO_DATE(#{endDate}, 'YYYY-MM'), TO_DATE(#{startDate},
        'YYYY-MM')) + 1
        ) c
        WHERE (SUBSTR(t.DISCOVERY_TIME, 1, 7) >= #{startDate}) AND (SUBSTR(t.DISCOVERY_TIME, 1, 7) <![CDATA[<=]]>
        #{endDate})
        OR (SUBSTR(t.DISCOVERY_TIME, 1, 7) >= #{startDate}) AND (SUBSTR(t.DISCOVERY_TIME, 1, 7) <![CDATA[<=]]>
        #{endDate})
        GROUP BY c.YEAR_MONTH
        ORDER BY c.YEAR_MONTH DESC
    </select>
    <select id="queryresult2" resultType="com.wzmtr.eam.dto.res.statistic.RamsResult2ResDTO">
        select c.YEAR_MONTH                                        as "yearMonth",
               (SELECT count(1)
                FROM T_FAULT_INFO d
                         left join T_FAULT_ORDER df on d.FAULT_NO = df.FAULT_NO
                WHERE d.MAJOR_CODE in ('06', '07')
                  and d.IF_RELIABILITY = '0'
                  and substr(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
                  and df.order_Status != '99'
                  and df.FAULT_AFFECT in ('06', '07', '08', '09')) as "noService",
               (select count(1)
                from T_FAULT_INFO d,
                     T_FAULT_ORDER df
                where d.FAULT_NO = df.FAULT_NO
                  and substr(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
                  and nvl(df.IS_FAULT, '10') = '10'
                  and d.MAJOR_CODE in ('06', '07')
                  and df.order_Status != '99'
                  and df.FAULT_AFFECT in ('03', '04', '05'))                as "late",
               (select count(1)
                from T_FAULT_INFO d,
                     T_FAULT_ORDER df
                where d.FAULT_NO = df.FAULT_NO
                  and substr(DISCOVERY_TIME, 1, 7) = c.YEAR_MONTH
                  and d.MAJOR_CODE in ('06', '07')
                  and df.order_Status != '99')                     as "sum",
               (select sum(t.DAILY_WORK_MILE) / 10000
                from T_TRAIN_MILE t
                where substr(t.DAY, 1, 7) = c.YEAR_MONTH)          as "miles"
        from T_FAULT_INFO t,
             (select to_char(add_months(to_date(#{startDate}, 'YYYY-MM'), rownum - 1), 'YYYY-MM') AS YEAR_MONTH
              from dual
                  connect by rownum <![CDATA[<=]]> months_between(to_date(#{endDate}, 'YYYY-MM'), to_date(#{startDate}, 'YYYY-MM'))+1) c
        where (substr(t.DISCOVERY_TIME, 1, 7) >= #{startDate}) and (substr(t.DISCOVERY_TIME, 1, 7) <![CDATA[<=]]> #{endDate})
           or (substr(t.DISCOVERY_TIME, 1, 7) >= #{startDate}) and (substr(t.DISCOVERY_TIME, 1, 7) <![CDATA[<=]]> #{endDate})
        group by c.YEAR_MONTH
        ORDER by c.YEAR_MONTH desc
    </select>
    <select id="querySysPerform" resultType="com.wzmtr.eam.dto.res.statistic.RamsSysPerformResDTO">
        SELECT LATE.SC       AS "moduleName",
               LATE.NUM_LATE AS "numLate",
               NOS.NUM_NOS   AS "numNos"
        FROM (
                 (SELECT c."SC",
                         SUM(CASE WHEN t."moId" = c."SC" THEN 1 ELSE 0 END) AS "NUM_LATE"
                  FROM (SELECT COUNT(1),
                               nvl(SUBSTR(a.FAULT_MODULE_ID, 4, 2), '21') AS "moId"
                        FROM T_FAULT_INFO a
                                 LEFT JOIN T_FAULT_ORDER df ON a.FAULT_NO = df.FAULT_NO
                        WHERE a.MAJOR_CODE = '07'
                          AND a.EXT3 IN ('02', '03', '04')
                          AND NVL(df.IS_FAULT, '10') = '10'
                          AND df.order_Status != '99'
                        GROUP BY a.FAULT_MODULE_ID) t,
                       (SELECT lpad(ROWNUM, 2, '0') AS "SC" FROM dual CONNECT BY ROWNUM <![CDATA[<=]]> 21) c
                  WHERE c."SC" IS NOT NULL
                  GROUP BY c."SC"
                  ORDER BY c."SC" ASC) LATE
                     LEFT JOIN (SELECT c."SC",
                                       SUM(CASE WHEN t."moId" = c."SC" THEN 1 ELSE 0 END) AS "NUM_NOS"
                                FROM (SELECT COUNT(1),
                                             nvl(SUBSTR(a.FAULT_MODULE_ID, 4, 2), '21') AS "moId"
                                      FROM T_FAULT_INFO a
                                               LEFT JOIN T_FAULT_ORDER df ON a.FAULT_NO = df.FAULT_NO
                                      WHERE a.MAJOR_CODE = '07'
                                        AND a.EXT3 IN ('05', '06', '08', '09')
                                        AND NVL(df.IS_FAULT, '10') = '10'
                                        AND df.order_Status != '99'
                                      GROUP BY a.FAULT_MODULE_ID) t,
                                     (SELECT lpad(ROWNUM, 2, '0') AS "SC" FROM dual CONNECT BY ROWNUM <![CDATA[<=]]> 21) c
                                WHERE c."SC" IS NOT NULL
                                GROUP BY c."SC"
                                ORDER BY c."SC" ASC) NOS ON NOS.SC = LATE.SC
                 )
    </select>
    <select id="querytotalMiles" resultType="com.wzmtr.eam.dto.res.statistic.RamsResDTO">
        select sum(a.TOTAL_MILES) as "totalMiles"
        from T_EQUIPMENT a
        where a.MAJOR_CODE = '07'
          and a.EQUIP_TYPE_CODE = '070101'
    </select>


    <select id="queryCountFautType4Rams" resultType="com.wzmtr.eam.dto.res.statistic.FaultConditionResDTO">
        select FAULT10.SC,
               FAULT10.ZX,
               FAULT20.CRK,
               FAULT30.YF,
               (FAULT10.ZX + FAULT20.CRK + FAULT30.YF) as "ZS",
               (FAULT10.ZX + FAULT20.CRK)              as NOYF
        from (select c."SC",
                     sum(case
                             when t."moId" = c."SC" then 1
                             else 0 end) as "ZX"
              from (select count(1), nvl(SUBSTR(a.FAULT_MODULE_ID, 4, 2), '21') as "moId"
                    from T_FAULT_INFO a
                             left join T_FAULT_ORDER df on a.FAULT_NO = df.FAULT_NO
                    where a.MAJOR_CODE = '07'
                      and a.FAULT_TYPE = '10'
                      and df.order_Status != '99'
                    group by a.FAULT_MODULE_ID) t,
                   (select lpad(rownum, 2, '0') as "SC" from dual connect by rownum <![CDATA[<=]]> 21) c
              where c."SC" is not null
              group by c."SC"
              order by c."SC" asc) FAULT10
                 left join (select c."SC",
                                   sum(case
                                           when t."moId" = c."SC" then 1
                                           else 0 end) as "CRK"
                            from (select count(1), nvl(SUBSTR(a.FAULT_MODULE_ID, 4, 2), '21') as "moId"
                                  from T_FAULT_INFO a
                                           left join T_FAULT_ORDER df on a.FAULT_NO = df.FAULT_NO
                                  where a.MAJOR_CODE = '07'
                                    and a.FAULT_TYPE = '20'
                                    and nvl(df.IS_FAULT, '10') = '10'
                                    and df.order_Status != '99'
                                  group by a.FAULT_MODULE_ID) t,
                                 (select lpad(rownum, 2, '0') as "SC" from dual connect by rownum <![CDATA[<=]]> 21) c
                            where c."SC" is not null
                            group by c."SC"
                            order by c."SC" asc) FAULT20 on FAULT10.SC = FAULT20.SC
                 left join (select c."SC",
                                   sum(case
                                           when t."moId" = c."SC" then 1
                                           else 0 end) as "YF"
                            from (select count(1), nvl(SUBSTR(a.FAULT_MODULE_ID, 4, 2), '21') as "moId"
                                  from T_FAULT_INFO a
                                           left join T_FAULT_ORDER df on a.FAULT_NO = df.FAULT_NO
                                  where a.MAJOR_CODE = '07'
                                    and a.FAULT_TYPE = '30'
                                    and nvl(df.IS_FAULT, '10') = '10'
                                    and df.order_Status != '99'
                                  group by a.FAULT_MODULE_ID) t,
                                 (select lpad(rownum, 2, '0') as "SC" from dual connect by rownum <![CDATA[<=]]> 21) c
                            where c."SC" is not null
                            group by c."SC"
                            order by c."SC" asc) FAULT30 on FAULT10.SC = FAULT30.SC
    </select>

    <select id="queryRamsFaultList" resultType="com.wzmtr.eam.dto.res.statistic.FaultRamsResDTO">
        SELECT
        d.FAULT_NO as "faultNo",  <!-- 故障编号 -->
        d.OBJECT_NAME as "objectName",  <!-- 对象名称 -->
        d.FAULT_TYPE as "faultType",  <!-- 故障分类（10-运营故障；20-自检故障；30-新线调试；40-正线故障；50-出库故障） -->
        d.FAULT_DETAIL as "faultDetail",  <!-- 故障详情 -->
        d.DISCOVERY_TIME as "discoveryTime",  <!-- 发现时间 -->
        d.FILLIN_USER_ID as "fillinUserId",  <!-- 提报人工号 -->
        d.FILLIN_DEPT_CODE as "fillinDeptCode",  <!-- 提报部门 -->
        df.ARRIVAL_TIME as "arrivalTime",
        b21.ORG_NAME_S || '-' || xu.NAME as "fillinUser",
        df.REPAIR_END_TIME as "repairEndTime",  <!-- 维修结束时间 -->
        round(((to_date(decode(df.REPAIR_END_TIME, ' ', '2019-11-11 11:11:11', df.REPAIR_END_TIME), 'yyyy-mm-dd HH24:mi:ss') - to_date(decode(df.ARRIVAL_TIME, ' ', '2019-11-11 11:11:11', df.ARRIVAL_TIME), 'yyyy-mm-dd HH24:mi:ss')) * 24 * 60), 0) as "repairTime",
        df.REPORT_FINISH_USER_ID as "reportFinishUserId",  <!-- 完工人工号 -->
        nvl(xu1.NAME, ' ') as "reportFinishUser",
        df.ORDER_STATUS as "orderStatus",  <!-- 工单状态 -->
        df.FAULT_ACTION_DETAIL as "faultActionDetail",
        df.FAULT_WORK_NO as "faultWorkNo",
        d.EXT3 as "affect",
        d3.FAULT_ANALYSIS_NO as "faultAnalysisNo"
        FROM T_FAULT_INFO d
        LEFT JOIN T_FAULT_ORDER df ON d.FAULT_NO = df.FAULT_NO
        LEFT JOIN T_FAULT_DETAIL d3 ON d3.FAULT_NO = df.FAULT_NO
        LEFT JOIN SYS_USER xu ON d.FILLIN_USER_ID = xu.LOGIN_NAME
        LEFT JOIN T_SUPPLIER b21 ON b21.ORG_CODE = d.FILLIN_DEPT_CODE
        LEFT JOIN SYS_USER xu1 ON df.REPORT_FINISH_USER_ID = xu1.LOGIN_NAME
        WHERE 1 = 1
        AND d.MAJOR_CODE = '07'
        AND NVL(df.IS_FAULT, '10') = '10'
        AND df.ORDER_STATUS <![CDATA[!=]]> '99'
        <if test="startDate!=null and startDate!=''">
            AND to_date(d.DISCOVERY_TIME, 'YYYY-MM-DD HH24:MI:SS') <![CDATA[>=]]> to_date(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate!=null and endDate!=''">
            AND to_date(d.DISCOVERY_TIME, 'YYYY-MM-DD HH24:MI:SS') <![CDATA[<=]]> to_date(#{endDate}, 'YYYY-MM-DD')
        </if>
        <if test="trainNo!=null and trainNo!=''">
            AND d.OBJECT_NAME=#{trainNo}
        </if>
        ORDER BY d.FAULT_NO DESC
    </select>
    <select id="countRamsFaultList" resultType="java.lang.Double">
        SELECT COUNT(d.FAULT_NO)
        FROM T_FAULT_INFO d
        LEFT JOIN T_FAULT_ORDER df ON d.FAULT_NO = df.FAULT_NO
        LEFT JOIN T_FAULT_DETAIL d3 ON d3.FAULT_NO = df.FAULT_NO
        LEFT JOIN SYS_USER xu ON d.FILLIN_USER_ID = xu.LOGIN_NAME
        LEFT JOIN T_SUPPLIER b21 ON b21.ORG_CODE = d.FILLIN_DEPT_CODE
        LEFT JOIN SYS_USER xu1 ON df.REPORT_FINISH_USER_ID = xu1.LOGIN_NAME
        WHERE d.MAJOR_CODE in ('06','07')
        AND df.ORDER_STATUS <![CDATA[!=]]> '99'
        <if test="startDate!=null and startDate!=''">
            AND to_date(d.DISCOVERY_TIME, 'YYYY-MM-DD HH24:MI:SS') <![CDATA[>=]]> to_date(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate!=null and endDate!=''">
            AND to_date(d.DISCOVERY_TIME, 'YYYY-MM-DD HH24:MI:SS') <![CDATA[<=]]> to_date(#{endDate}, 'YYYY-MM-DD')
        </if>
        <if test="trainNo!=null and trainNo!=''">
            AND d.OBJECT_NAME=#{trainNo}
        </if>
        <if test="faultType!=null and faultType!=''">
            AND d.FAULT_TYPE in (${faultType})
        </if>
        <if test="faultAffect!=null and faultAffect!=''">
            AND df.FAULT_AFFECT in (${faultAffect})
        </if>
        <if test="ifReliability!=null and ifReliability!=''">
            and d.IF_RELIABILITY = #{ifReliability}
        </if>
        ORDER BY d.FAULT_NO DESC
    </select>
    <select id="getMileSubtract" resultType="java.lang.Double">
        SELECT SUM(DAILY_WORK_MILE)
        from T_TRAIN_MILE where "DAY">=#{startDate} and #{endDate}>="DAY"
        and EQUIP_NAME=#{trainNo} and DELETE_FLAG='0'
<!--        SELECT-->
<!--        CASE WHEN ((SELECT TOTAL_WORK_MILE from T_TRAIN_MILE where "DAY"=#{endDate} and-->
<!--        EQUIP_NAME=#{trainNo} and DELETE_FLAG='0')- -->
<!--        (SELECT TOTAL_WORK_MILE from T_TRAIN_MILE where "DAY"=#{startDate} and EQUIP_NAME=#{trainNo} and-->
<!--        DELETE_FLAG='0')) IS NULL THEN 0 ELSE-->
<!--        ((SELECT TOTAL_WORK_MILE from T_TRAIN_MILE where "DAY"=#{endDate} and-->
<!--        EQUIP_NAME=#{trainNo} and DELETE_FLAG='0')- -->
<!--        (SELECT TOTAL_WORK_MILE from T_TRAIN_MILE where "DAY"=#{startDate} and EQUIP_NAME=#{trainNo} and-->
<!--        DELETE_FLAG='0')) END-->
<!--        from dual-->
    </select>
    <select id="queryPart" resultType="com.wzmtr.eam.dto.res.statistic.FaultRamsResDTO">
        SELECT nvl(listagg(to_char(dm20.REPLACEMENT_NAME), '; ') within group (order by dm20.REPLACEMENT_NAME),
                   ' ') AS "replacementName",
               nvl(listagg(to_char(dm20.OLD_REP_NO), '; ') within group (order by dm20.OLD_REP_NO),
                   ' ') AS "oldRepNo",
               nvl(listagg(to_char(dm20.NEW_REP_NO), '; ') within group (order by dm20.NEW_REP_NO),
                   ' ') AS "newRepNo",
               nvl(listagg(to_char(dm20.OPERATE_COST_TIME), '; ') within group (order by dm20.OPERATE_COST_TIME),
                   ' ') AS
                           "operateCostTime"
        FROM T_PART_REPLACEMENT dm20
                 LEFT JOIN
             T_FAULT_ORDER fm02
             ON
                 fm02.FAULT_WORK_NO = dm20.FAULT_WORK_NO
        WHERE fm02.FAULT_WORK_NO = #{faultWorkNo}
    </select>
    <select id="queryCountFaut" resultType="com.wzmtr.eam.dto.res.statistic.FaultConditionResDTO">
        SELECT
            t.FAULT_MODULE_ID AS "SC",
            SUM(CASE WHEN t.FAULT_TYPE = '10' THEN 1 ELSE 0 END) AS ZX,
            SUM(CASE WHEN t.FAULT_TYPE = '20' THEN 1 ELSE 0 END) AS CRK,
            SUM(CASE WHEN t.FAULT_TYPE = '30' THEN 1 ELSE 0 END) AS YF,
            (SUM(CASE WHEN t.FAULT_TYPE = '10' THEN 1 ELSE 0 END) + SUM(CASE WHEN t.FAULT_TYPE = '20' THEN 1 ELSE 0 END) + SUM(CASE WHEN t.FAULT_TYPE = '30' THEN 1 ELSE 0 END)) AS "ZS",
            (SUM(CASE WHEN t.FAULT_TYPE = '10' THEN 1 ELSE 0 END) + SUM(CASE WHEN t.FAULT_TYPE = '20' THEN 1 ELSE 0 END)) AS NOYF
        FROM
            T_FAULT_INFO t
                LEFT JOIN T_FAULT_ORDER df ON t.FAULT_NO = df.FAULT_NO
        WHERE
            t.MAJOR_CODE in ('07','06')
          AND df.order_Status != '99'
        GROUP BY
            t.FAULT_MODULE_ID
    </select>
    <select id="getMileByTrainNoEnd" resultType="java.lang.Double">
        select TOTAL_WORK_MILE from T_TRAIN_MILE where EQUIP_NAME=#{trainNo} and "DAY"=#{endDate}
    </select>

    <select id="getMileByTrainNoStart" resultType="java.lang.Double">
        select TOTAL_WORK_MILE from T_TRAIN_MILE where EQUIP_NAME=#{trainNo} and "DAY"=#{startDate}
    </select>


</mapper>