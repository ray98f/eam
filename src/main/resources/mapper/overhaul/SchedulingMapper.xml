<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzmtr.eam.mapper.overhaul.SchedulingMapper">

    <select id="listScheduling" resultType="com.wzmtr.eam.dto.res.overhaul.SchedulingResDTO">
        SELECT REC_ID, EQUIP_CODE, "DAY", IS_TRIGGER, EQUIP_NAME, PACKAGE_TYPE,
        (CASE WHEN "TYPE"='1' THEN '一级修-' || SCHEDULING_NAME || '天包'
        ELSE '二级修-' || SCHEDULING_NAME || '天包' END) SCHEDULING_NAME,
        PLAN_CODE, PLAN_NAME, "TYPE"
        FROM T_OVERHAUL_ORDER_SCHEDULING
        WHERE DELETE_FLAG='0' AND EQUIP_CODE=#{equipCode}
        AND TO_DATE("DAY", 'YYYY-MM-DD')>=TO_DATE(#{startTime}, 'YYYY-MM-DD')
        AND TO_DATE(#{endTime}, 'YYYY-MM-DD')>=TO_DATE("DAY", 'YYYY-MM-DD')
    </select>

    <select id="getSchedulingDetail" resultType="com.wzmtr.eam.dto.res.overhaul.SchedulingResDTO">
        SELECT REC_ID, EQUIP_CODE, "DAY", IS_TRIGGER, EQUIP_NAME, PACKAGE_TYPE,
        (CASE WHEN "TYPE"='1' THEN '一级修-' || SCHEDULING_NAME || '天包'
        ELSE '二级修-' || SCHEDULING_NAME || '天包' END) SCHEDULING_NAME,
        PLAN_CODE, PLAN_NAME, "TYPE"
        FROM T_OVERHAUL_ORDER_SCHEDULING
        WHERE DELETE_FLAG='0' AND REC_ID=#{id}
    </select>

    <select id="getLastSchedulingDetail" resultType="com.wzmtr.eam.dto.res.overhaul.SchedulingResDTO">
        SELECT * FROM
        (SELECT "DAY", SCHEDULING_NAME
        FROM T_OVERHAUL_ORDER_SCHEDULING
        WHERE EQUIP_CODE=#{equipCode} AND DELETE_FLAG='0'
        AND "TYPE"=#{type} AND TO_DATE(#{day}, 'YYYY-MM-DD')>TO_DATE("DAY", 'YYYY-MM-DD')
        ORDER BY "DAY" DESC) WHERE rownum=1
    </select>

    <update id="modifyScheduling">
        UPDATE T_OVERHAUL_ORDER_SCHEDULING SET
        "DAY"=#{day},
        REC_REVISOR=#{recRevisor},
        REC_REVISE_TIME=TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE REC_ID=#{recId} AND DELETE_FLAG='0'
    </update>

    <update id="syncModifyScheduling">
        UPDATE T_OVERHAUL_ORDER_SCHEDULING SET
        "DAY"=TO_CHAR(TO_DATE("DAY", 'YYYY-MM-DD') + #{days}, 'YYYY-MM-DD'),
        REC_REVISOR=#{req.recRevisor},
        REC_REVISE_TIME=TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE EQUIP_CODE=#{req.equipCode} AND DELETE_FLAG='0' AND IS_TRIGGER='0'
        AND TO_DATE("DAY", 'YYYY-MM-DD')>TO_DATE(#{req.day}, 'YYYY-MM-DD') AND REC_ID!=#{req.recId}
    </update>

    <update id="removeSchedulingAfterNow">
        UPDATE T_OVERHAUL_ORDER_SCHEDULING SET
        DELETE_FLAG='1', REC_REVISOR=#{userId}, REC_REVISE_TIME=TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE EQUIP_CODE=#{equipCode} AND DELETE_FLAG='0'
        AND TO_DATE("DAY", 'YYYY-MM-DD')>TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
    </update>
    
    <select id="getTrainRule" resultType="com.wzmtr.eam.dto.res.overhaul.SchedulingRuleResDTO">
        SELECT op.PLAN_CODE, op.PLAN_NAME, oo.OBJECT_CODE as equipCode,
        oo.OBJECT_NAME as equipName, wrd.RULE_CODE, wrd.RULE_DETAL_NAME, wrd.PERIOD,
        TO_CHAR(TO_DATE(op.FIRST_BEGIN_TIME, 'YYYYMMDD'), 'YYYY-MM-DD') as FIRST_BEGIN_TIME
        FROM T_OVERHAUL_PLAN op
        LEFT JOIN T_OVERHAUL_OBJECT oo ON oo.PLAN_CODE=op.PLAN_CODE and oo.DELETE_FLAG='0'
        LEFT JOIN T_WO_RULE_DETAIL wrd ON wrd.RULE_CODE=op.RULE_CODE and wrd.DELETE_FLAG='0'
        WHERE op.DELETE_FLAG='0' AND oo.OBJECT_CODE=#{equipCode}
        AND op.WEEK_PLAN_CODE=' ' AND op.SUBJECT_CODE='07' AND op.TRIAL_STATUS='30'
        <if test="type!=null and type=='1'.toString()">
            and 720>wrd.PERIOD
        </if>
        <if test="type!=null and type=='2'.toString()">
            and wrd.PERIOD>=720
        </if>
        ORDER BY wrd.PERIOD ASC
    </select>
    
    <select id="getTrainLastTriggerScheduling" resultType="com.wzmtr.eam.dto.res.overhaul.SchedulingResDTO">
        SELECT * FROM
        (SELECT "DAY", SCHEDULING_NAME
        FROM T_OVERHAUL_ORDER_SCHEDULING
        WHERE EQUIP_CODE=#{equipCode} AND DELETE_FLAG='0' AND IS_TRIGGER='1'
        <if test="type!=null and type!=''">
            AND "TYPE"=#{type}
        </if>
        ORDER BY "DAY" DESC) WHERE rownum=1
    </select>

    <select id="getLastLevelOneRepairDay" resultType="java.lang.String">
        SELECT "DAY" FROM T_OVERHAUL_ORDER_SCHEDULING
        WHERE DELETE_FLAG='0' AND TYPE='1' AND IS_TRIGGER='0'
        AND TO_DATE(#{endTime}, 'YYYY-MM-DD')>TO_DATE("DAY", 'YYYY-MM-DD')
        AND TO_DATE("DAY", 'YYYY-MM-DD')>=TO_DATE(#{startTime}, 'YYYY-MM-DD')
    </select>

    <insert id="addOverhaulOrderScheduling">
        INSERT ALL
        <foreach collection="list" index="index" item="scheduling" separator=" ">
            INTO T_OVERHAUL_ORDER_SCHEDULING (
            REC_ID,
            EQUIP_CODE,
            "DAY",
            IS_TRIGGER,
            REC_CREATOR,
            REC_CREATE_TIME,
            DELETE_FLAG,
            EQUIP_NAME,
            SCHEDULING_NAME,
            PLAN_CODE,
            PLAN_NAME,
            PACKAGE_TYPE,
            "TYPE")
            VALUES (
            #{scheduling.recId,jdbcType=VARCHAR},
            #{scheduling.equipCode,jdbcType=VARCHAR},
            #{scheduling.day,jdbcType=VARCHAR},
            #{scheduling.isTrigger,jdbcType=VARCHAR},
            #{userId,jdbcType=VARCHAR},
            TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'),
            '0',
            #{scheduling.equipName,jdbcType=VARCHAR},
            #{scheduling.schedulingName,jdbcType=VARCHAR},
            #{scheduling.planCode,jdbcType=VARCHAR},
            #{scheduling.planName,jdbcType=VARCHAR},
            #{scheduling.packageType,jdbcType=VARCHAR},
            #{scheduling.type,jdbcType=VARCHAR})
        </foreach>
        SELECT * FROM dual
    </insert>

    <update id="triggerScheduling">
        UPDATE T_OVERHAUL_ORDER_SCHEDULING SET
        IS_TRIGGER='1', REC_REVISOR='admin', REC_REVISE_TIME=TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
        WHERE "DAY"=TO_CHAR(SYSDATE, 'YYYY-MM-DD')
        <if test="list!=null and list.size()>0">
            AND PLAN_CODE NOT IN (
            <foreach collection="list" index="index" item="planCode" separator=",">
                #{planCode}
            </foreach>
            )
        </if>
        AND DELETE_FLAG='0'
    </update>
</mapper>