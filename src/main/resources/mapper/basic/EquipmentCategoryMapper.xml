<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzmtr.eam.mapper.basic.EquipmentCategoryMapper">

    <select id="pageEquipmentCategory" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT
        dc.REC_ID as "recId",
        dc.COMPANY_CODE as "companyCode",
        dc.COMPANY_NAME as "companyName",
        dc.NODE_CODE as "nodeCode",
        dc.NODE_NAME as "nodeName",
        dc.PARENT_NODE_REC_ID as "parentNodeRecId",
        dc.NODE_LEVEL as "nodeLevel",
        dc.REMARK as "remark",
        u.NAME as "recCreator",
        dc.REC_CREATE_TIME as "recCreateTime",
        dc.REC_STATUS as "recStatus",
        dc.EXT1 as "ext1",
        dc.EXT2 as "ext2",
        dc.EXT3 as "ext3",
        dc.EXT4 as "ext4",
        dc.EXT5 as "ext5"
        FROM T_EQUIPMENT_CATEGORY dc
        LEFT JOIN SYS_USER u ON dc.REC_CREATOR=u.ID
        WHERE dc.DELETE_FLAG='0'
        <if test="name!=null and name!=''">
            and dc.NODE_NAME like '%' || #{name} || '%'
        </if>
        <if test="code!=null and code!=''">
            and dc.NODE_CODE like '%' || #{code} || '%'
        </if>
        <if test="parentId!=null and parentId!=''">
            and dc.PARENT_NODE_REC_ID=#{parentId}
        </if>
        ORDER BY dc.NODE_CODE ASC
    </select>

    <select id="listEquipmentCategoryRootList" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT REC_ID, PARENT_NODE_REC_ID, NODE_NAME, NODE_CODE, REC_STATUS, REMARK, REC_CREATOR, REC_CREATE_TIME
        FROM T_EQUIPMENT_CATEGORY
        WHERE DELETE_FLAG=0 AND REC_ID='0'
        ORDER BY NODE_CODE ASC
    </select>

    <select id="listEquipmentCategoryBodyList" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT REC_ID, PARENT_NODE_REC_ID, NODE_NAME, NODE_CODE, REC_STATUS, REMARK, REC_CREATOR, REC_CREATE_TIME
        FROM T_EQUIPMENT_CATEGORY
        WHERE DELETE_FLAG=0 AND REC_ID!='0'
        ORDER BY NODE_CODE ASC
    </select>

    <select id="getEquipmentCategoryDetail" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT dc.REC_ID, dc.PARENT_NODE_REC_ID, dc.NODE_NAME, dc.NODE_CODE, dc.REC_STATUS, dc.REMARK, u.NAME AS REC_CREATOR, dc.REC_CREATE_TIME
        FROM T_EQUIPMENT_CATEGORY dc
        LEFT JOIN SYS_USER u ON dc.REC_CREATOR=u.ID
        WHERE dc.REC_ID=#{id}
    </select>

    <select id="selectEquipmentCategoryIsExist" resultType="java.lang.Integer">
        SELECT COUNT(REC_ID)
        FROM T_EQUIPMENT_CATEGORY
        WHERE PARENT_NODE_REC_ID=#{parentNodeRecId} AND NODE_CODE=#{nodeCode} AND DELETE_FLAG='0'
        <if test="recId!=null and recId!=''">
            AND REC_ID!=#{recId}
        </if>
    </select>

    <insert id="addEquipmentCategory">
        INSERT INTO T_EQUIPMENT_CATEGORY (REC_ID, NODE_NAME, NODE_CODE, REC_STATUS,
        NODE_LEVEL,
        <if test="remark!=null and remark!=''">
            REMARK,
        </if>
        REC_CREATOR, REC_CREATE_TIME, PARENT_NODE_REC_ID)
        VALUES (#{recId}, #{nodeName}, #{nodeCode}, #{recStatus},
        (SELECT NODE_LEVEL+1 FROM T_EQUIPMENT_CATEGORY WHERE REC_ID=#{parentNodeRecId}),
        <if test="remark!=null and remark!=''">
            #{remark},
        </if>
        #{recCreator}, #{recCreateTime}, #{parentNodeRecId})
    </insert>

    <update id="modifyEquipmentCategory">
        UPDATE T_EQUIPMENT_CATEGORY SET
        <if test="nodeName!=null">
            NODE_NAME=#{nodeName},
        </if>
        <if test="nodeCode!=null">
            NODE_CODE=#{nodeCode},
        </if>
        <if test="recStatus!=null">
            REC_STATUS=#{recStatus},
        </if>
        <if test="remark!=null">
            REMARK=#{remark},
        </if>
        <if test="parentNodeRecId!=null">
            PARENT_NODE_REC_ID=#{parentNodeRecId},
            NODE_LEVEL=(SELECT NODE_LEVEL+1 FROM T_EQUIPMENT_CATEGORY WHERE REC_ID=#{parentNodeRecId}),
        </if>
        REC_REVISOR=#{recRevisor}, REC_REVISE_TIME=#{recReviseTime}
        WHERE REC_ID=#{recId}
    </update>

    <update id="deleteEquipmentCategory">
        UPDATE T_EQUIPMENT_CATEGORY SET
        DELETE_FLAG='1', REC_DELETOR=#{userId}, REC_DELETE_TIME=#{time}
        WHERE REC_ID IN (
        <foreach collection="ids" index="index" item="id" separator=",">
            #{id}
        </foreach>
        )
    </update>

    <select id="listEquipmentCategory" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT
        dc.REC_ID as "recId",
        dc.COMPANY_CODE as "companyCode",
        dc.COMPANY_NAME as "companyName",
        dc.NODE_CODE as "nodeCode",
        dc.NODE_NAME as "nodeName",
        dc.PARENT_NODE_REC_ID as "parentNodeRecId",
        dc.NODE_LEVEL as "nodeLevel",
        dc.REMARK as "remark",
        u.NAME as "recCreator",
        dc.REC_CREATE_TIME as "recCreateTime",
        dc.REC_STATUS as "recStatus",
        dc.EXT1 as "ext1",
        dc.EXT2 as "ext2",
        dc.EXT3 as "ext3",
        dc.EXT4 as "ext4",
        dc.EXT5 as "ext5"
        FROM T_EQUIPMENT_CATEGORY dc
        LEFT JOIN SYS_USER u ON dc.REC_CREATOR=u.ID
        where dc.DELETE_FLAG='0'
        <if test="name!=null and name!=''">
            and dc.NODE_NAME like '%' || #{name} || '%'
        </if>
        <if test="code!=null and code!=''">
            and dc.NODE_CODE like '%' || #{code} || '%'
        </if>
        <if test="parentId!=null and parentId!=''">
            and dc.PARENT_NODE_REC_ID=#{parentId}
        </if>
        ORDER BY dc.NODE_CODE ASC
    </select>

    <select id="exportEquipmentCategory" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT
        dc.REC_ID as "recId",
        dc.COMPANY_CODE as "companyCode",
        dc.COMPANY_NAME as "companyName",
        dc.NODE_CODE as "nodeCode",
        dc.NODE_NAME as "nodeName",
        dc.PARENT_NODE_REC_ID as "parentNodeRecId",
        dc.NODE_LEVEL as "nodeLevel",
        dc.REMARK as "remark",
        u.NAME as "recCreator",
        dc.REC_CREATE_TIME as "recCreateTime",
        dc.REC_STATUS as "recStatus",
        dc.EXT1 as "ext1",
        dc.EXT2 as "ext2",
        dc.EXT3 as "ext3",
        dc.EXT4 as "ext4",
        dc.EXT5 as "ext5"
        FROM T_EQUIPMENT_CATEGORY dc
        LEFT JOIN SYS_USER u ON dc.REC_CREATOR=u.ID
        where dc.DELETE_FLAG='0'
        AND dc.REC_ID IN (
        <foreach collection="ids" index="index" item="id" separator=",">
            #{id}
        </foreach>
        )
        ORDER BY dc.NODE_CODE ASC
    </select>

    <select id="getFirstEquipmentCategory" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT dc.REC_ID, dc.PARENT_NODE_REC_ID, dc.NODE_NAME, dc.NODE_CODE, dc.REC_STATUS, dc.REMARK, u.NAME AS REC_CREATOR, dc.REC_CREATE_TIME
        FROM T_EQUIPMENT_CATEGORY dc
        LEFT JOIN SYS_USER u ON dc.REC_CREATOR=u.ID
        WHERE dc.DELETE_FLAG='0' and dc.PARENT_NODE_REC_ID='0'
        <if test="type!=null and type=='1'.toString()">
            AND NODE_CODE NOT IN ('06', '07')
        </if>
        <if test="type!=null and type=='2'.toString()">
            AND NODE_CODE IN ('06', '07')
        </if>
        ORDER BY dc.NODE_CODE ASC
    </select>

    <select id="getChildEquipmentCategory" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT dc.REC_ID, dc.PARENT_NODE_REC_ID, dc.NODE_NAME, dc.NODE_CODE, dc.REC_STATUS, dc.REMARK
        FROM T_EQUIPMENT_CATEGORY dc
        WHERE dc.DELETE_FLAG='0' and dc.PARENT_NODE_REC_ID in (SELECT dc2.REC_ID from T_EQUIPMENT_CATEGORY dc2 where dc2.NODE_CODE=#{code})
        ORDER BY dc.NODE_CODE ASC
    </select>

    <select id="getIndexByIndex" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryResDTO">
        SELECT
        NODE_CODE as "nodeCode",
        NODE_NAME as "nodeName"
        FROM T_EQUIPMENT_CATEGORY where 1=1
        <if test="nodeCode!=null and nodeCode!=''">
            and NODE_CODE = #{nodeCode}
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and NODE_NAME = #{nodeName}
        </if>
        <if test="nodeLevel!=null">
            and NODE_LEVEL = #{nodeLevel}
        </if>
    </select>

    <resultMap id="moduleList" type="com.wzmtr.eam.dto.res.basic.EquipmentCategoryModuleResDTO">
        <id property="moduleName" column="MODULE_NAME"/>
        <result property="majorCode" column="MAJOR_CODE"/>
        <result property="majorName" column="MAJOR_NAME"/>
        <result property="systemCode" column="SYSTEM_CODE"/>
        <result property="systemName" column="SYSTEM_NAME"/>
        <result property="equipTypeCode" column="EQUIP_TYPE_CODE"/>
        <result property="equipTypeName" column="EQUIP_TYPE_NAME"/>
        <collection property="partList" javaType="java.util.ArrayList"
                    ofType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryModuleResDTO$Part"
                    select="listEquipmentCategoryPart"
                    column="{majorCode=MAJOR_CODE,systemCode=SYSTEM_CODE,equipTypeCode=EQUIP_TYPE_CODE,moduleName=MODULE_NAME}">
            <id property="partList.recId" column="REC_ID"/>
            <result property="partList.partName" column="PART_NAME"/>
            <result property="partList.quantity" column="QUANTITY"/>
        </collection>
    </resultMap>

    <select id="listEquipmentCategoryModule" resultMap="moduleList">
        SELECT * FROM (
        select t.MODULE_NAME, t.MAJOR_CODE, t.MAJOR_NAME, t.SYSTEM_CODE, t.SYSTEM_NAME, t.EQUIP_TYPE_CODE,
            t.EQUIP_TYPE_NAME, ROW_NUMBER() OVER(PARTITION BY t.MODULE_NAME ORDER BY t.MODULE_NAME) as rn
            FROM T_EQUIPMENT_CATEGORY_PART t
            WHERE t.DELETE_FLAG='0'
            <if test="majorCode!=null and majorCode!=''">
                AND t.MAJOR_CODE=#{majorCode}
            </if>
            <if test="systemCode!=null and systemCode!=''">
                AND t.SYSTEM_CODE=#{systemCode}
            </if>
            <if test="equipTypeCode!=null and equipTypeCode!=''">
                AND t.EQUIP_TYPE_CODE=#{equipTypeCode}
            </if>
        ) WHERE rn = 1
    </select>

    <select id="listEquipmentCategoryPart" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryModuleResDTO$Part">
        SELECT REC_ID, PART_NAME, QUANTITY
        FROM T_EQUIPMENT_CATEGORY_PART
        WHERE DELETE_FLAG='0' AND MAJOR_CODE=#{majorCode} AND SYSTEM_CODE=#{systemCode}
        AND EQUIP_TYPE_CODE=#{equipTypeCode}
        <if test="moduleName!=null and moduleName!=''">
            AND MODULE_NAME=#{moduleName}
        </if>
        ORDER BY REC_CREATE_TIME ASC
    </select>

    <resultMap id="subclassList" type="com.wzmtr.eam.dto.res.basic.EquipmentCategorySubclassResDTO">
        <id property="equipSubclassName" column="EQUIP_SUBCLASS_NAME"/>
        <result property="majorCode" column="MAJOR_CODE"/>
        <result property="majorName" column="MAJOR_NAME"/>
        <result property="systemCode" column="SYSTEM_CODE"/>
        <result property="systemName" column="SYSTEM_NAME"/>
        <result property="equipTypeCode" column="EQUIP_TYPE_CODE"/>
        <result property="equipTypeName" column="EQUIP_TYPE_NAME"/>
        <collection property="moduleList" javaType="java.util.ArrayList"
                    ofType="com.wzmtr.eam.dto.res.basic.EquipmentCategorySubclassResDTO$Module"
                    select="listEquipmentCategoryModuleBySubclass"
                    column="{majorCode=MAJOR_CODE,systemCode=SYSTEM_CODE,equipTypeCode=EQUIP_TYPE_CODE,equipSubclassName=EQUIP_SUBCLASS_NAME}">
            <id property="moduleList.moduleName" column="MODULE_NAME"/>
            <collection property="moduleList.partList" javaType="java.util.ArrayList"
                        ofType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryModuleResDTO$Part"
                        select="listEquipmentCategoryPartBySubclass"
                        column="{majorCode=MAJOR_CODE,systemCode=SYSTEM_CODE,equipTypeCode=EQUIP_TYPE_CODE,equipSubclassName=EQUIP_SUBCLASS_NAME,moduleName=MODULE_NAME}">
                <id property="moduleList.partList.recId" column="REC_ID"/>
                <result property="moduleList.partList.partName" column="PART_NAME"/>
                <result property="moduleList.partList.quantity" column="QUANTITY"/>
            </collection>
        </collection>
    </resultMap>

    <select id="listEquipmentCategorySubclass" resultMap="subclassList">
        SELECT * FROM (
        select t.EQUIP_SUBCLASS_NAME, t.MAJOR_CODE, t.MAJOR_NAME, t.SYSTEM_CODE, t.SYSTEM_NAME, t.EQUIP_TYPE_CODE,
        t.EQUIP_TYPE_NAME, ROW_NUMBER() OVER(PARTITION BY t.EQUIP_SUBCLASS_NAME ORDER BY t.EQUIP_SUBCLASS_NAME) as rn
        FROM T_EQUIPMENT_CATEGORY_PART t
        WHERE t.DELETE_FLAG='0'
            <if test="majorCode!=null and majorCode!=''">
                AND t.MAJOR_CODE=#{majorCode}
            </if>
            <if test="systemCode!=null and systemCode!=''">
                AND t.SYSTEM_CODE=#{systemCode}
            </if>
            <if test="equipTypeCode!=null and equipTypeCode!=''">
                AND t.EQUIP_TYPE_CODE=#{equipTypeCode}
            </if>
        ) WHERE rn = 1
    </select>

    <select id="listEquipmentCategoryModuleBySubclass" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategorySubclassResDTO$Module">
        SELECT t.* FROM
        (SELECT DISTINCT MODULE_NAME, REC_CREATE_TIME
        FROM T_EQUIPMENT_CATEGORY_PART
        WHERE DELETE_FLAG='0' AND MAJOR_CODE=#{majorCode} AND SYSTEM_CODE=#{systemCode}
        AND EQUIP_TYPE_CODE=#{equipTypeCode}
        <if test="equipSubclassName!=null and equipSubclassName!=''">
            AND EQUIP_SUBCLASS_NAME=#{equipSubclassName}
        </if>
        ) t
        ORDER BY t.REC_CREATE_TIME ASC, t.MODULE_NAME ASC
    </select>

    <select id="listEquipmentCategoryPartBySubclass" resultType="com.wzmtr.eam.dto.res.basic.EquipmentCategoryModuleResDTO$Part">
        SELECT REC_ID, PART_NAME, QUANTITY
        FROM T_EQUIPMENT_CATEGORY_PART
        WHERE DELETE_FLAG='0' AND MAJOR_CODE=#{majorCode} AND SYSTEM_CODE=#{systemCode}
        AND EQUIP_TYPE_CODE=#{equipTypeCode}
        <if test="equipSubclassName!=null and equipSubclassName!=''">
            AND EQUIP_SUBCLASS_NAME=#{equipSubclassName}
        </if>
        <if test="moduleName!=null and moduleName!=''">
            AND MODULE_NAME=#{moduleName}
        </if>
        ORDER BY REC_CREATE_TIME ASC
    </select>

    <insert id="importEquipmentCategoryPart">
        insert ALL
        <foreach collection="list" index="index" item="part" separator=" ">
            INTO T_EQUIPMENT_CATEGORY_PART (
            REC_ID,
            MAJOR_CODE,
            MAJOR_NAME,
            SYSTEM_CODE,
            SYSTEM_NAME,
            EQUIP_TYPE_CODE,
            EQUIP_TYPE_NAME,
            EQUIP_SUBCLASS_NAME,
            MODULE_NAME,
            PART_NAME,
            QUANTITY,
            REC_CREATOR,
            REC_CREATE_TIME)
            VALUES (
            #{part.recId,jdbcType=VARCHAR},
            (SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.majorName} AND NODE_LEVEL=1),
            #{part.majorName},
            (SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.systemName} AND NODE_LEVEL=2
            AND NODE_CODE LIKE
            TO_CHAR((SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.majorName} AND NODE_LEVEL=1)) || '%'),
            #{part.systemName},
            (SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.equipTypeName} AND NODE_LEVEL=3
            AND NODE_CODE LIKE
            TO_CHAR((SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.systemName} AND NODE_LEVEL=2
            AND NODE_CODE LIKE
            TO_CHAR((SELECT NODE_CODE FROM T_EQUIPMENT_CATEGORY WHERE NODE_NAME=#{part.majorName} AND NODE_LEVEL=1)) || '%')) || '%'),
            #{part.equipTypeName},
            #{part.equipSubclassName},
            #{part.moduleName},
            #{part.partName,jdbcType=VARCHAR},
            #{part.quantity,jdbcType=NUMERIC},
            #{part.recCreator},
            #{part.recCreateTime})
        </foreach>
        SELECT * FROM dual
    </insert>

</mapper>